vars:
  registry: <registry>
  # Default value but overwritten in pipeline.py
  architecture: amd64

images:

  - name: agent
    vars:
      context: .
      template_context: scripts/dev/templates/agent
      # Default values but overwritten in pipeline.py

    inputs:
      - release_version
      - tools_version
      - image
      - image_dev

    platform: linux/$(inputs.params.architecture)
    stages:
      - name: mongodb-agent-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: [ "ubi" ]
        buildargs:
          agent_version: $(inputs.params.release_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: $(inputs.params.agent_distro)
          tools_distro: $(inputs.params.tools_distro)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-context-$(inputs.params.architecture)

      - name: agent-template-ubi
        task_type: dockerfile_template
        distro: ubi
        tags: [ "ubi" ]

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

      - name: mongodb-agent-build
        task_type: docker_build
        tags: [ "ubi" ]

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.image_dev):$(inputs.params.version_id)-context-$(inputs.params.architecture)
          agent_version: $(inputs.params.release_version)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-$(inputs.params.architecture)
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: latest-$(inputs.params.architecture)

  - name: readiness-probe
    vars:
      context: .
      template_context: scripts/dev/templates/readiness

    inputs:
      - image
      - image_dev

    platform: linux/$(inputs.params.architecture)
    stages:
      - name: readiness-init-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.builder
        tags: [ "readiness-probe", "ubi" ]
        labels:
          quay.expires-after: 48h

        buildargs:
          builder_image: $(inputs.params.builder_image)

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-context-$(inputs.params.architecture)

      - name: readiness-template-ubi
        task_type: dockerfile_template
        tags: [ "ubi" ]
        template_file_extension: readiness

        inputs:
          - base_image

        output:
          - dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.version_id)

      - name: readiness-init-build
        task_type: docker_build
        tags: [ "readiness-probe", "ubi" ]
        dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.image_dev):$(inputs.params.version_id)-context-$(inputs.params.architecture)


        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-$(inputs.params.architecture)
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: latest-$(inputs.params.architecture)

  - name: version-upgrade-hook
    vars:
      context: .
      template_context: scripts/dev/templates/versionhook

    inputs:
      - image
      - image_dev

    platform: linux/$(inputs.params.architecture)
    stages:
      - name: version-upgrade-hook-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.builder
        tags: [ "post-start-hook", "ubi" ]

        buildargs:
          builder_image: $(inputs.params.builder_image)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-context-$(inputs.params.architecture)

      - name: version-post-start-hook-template-ubi
        task_type: dockerfile_template
        tags: [ "ubi" ]
        template_file_extension: versionhook

        inputs:
          - base_image

        output:
          - dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.version_id)

      - name: version-upgrade-hook-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.version_id)
        tags: [ "post-start-hook", "ubi" ]

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.image_dev):$(inputs.params.version_id)-context-$(inputs.params.architecture)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: $(inputs.params.version_id)-$(inputs.params.architecture)
          - registry: $(inputs.params.registry)/$(inputs.params.image_dev)
            tag: latest-$(inputs.params.architecture)
